{"name":"Service Workers","tagline":"","body":"##Setting up to play with Service Workers\r\nMany service workers features are now enabled by default in newer versions of supporting browsers. If however you find that demo code is not working in your installed versions, you might need to enable a pref:\r\n\r\n- Firefox Nightly: Go to about:config and set dom.serviceWorkers.enabled to true; restart browser.\r\n- Chrome Canary: Go to chrome://flags and turn on experimental-web-platform-features; restart browser (note that some features are now enabled by default in Chrome.)\r\n- Opera: Go to opera://flags and enable Support for ServiceWorker; restart browser.\r\nYou’ll also need to serve your code via HTTPS — Service Workers are restricted to running across HTTPS for security reasons. GitHub is therefore a good place to host experiments, as it supports HTTPS.\r\n\r\n##Basic architecture\r\nWith service workers, the following steps are generally observed for basic set up:\r\n\r\nThe service worker URL is fetched and registered via serviceWorkerContainer.register().\r\nIf successful, the service worker is executed in a ServiceWorkerGlobalScope; this is basically a special kind of worker context, running off the main script execution thread, with no DOM access.\r\nThe service worker is now ready to process events.\r\nInstallation of the worker is attempted when service worker-controlled pages are accessed subsequently. An Install event is always the first one sent to a service worker (this can be used to start the process of populating an IndexedDB, and caching site assets). This is really the same kind of procedure as installing a native or Firefox OS app — making everything available for use offline.\r\nWhen the oninstall handler completes, the service worker is considered installed.\r\nNext is activation. When the service worker is installed, it then receives an activate event. The primary use of onactivate is for cleanup of resources used in previous versions of a Service Worker script.\r\nThe Service Worker will now control pages, but only those opened after the register() is successful. i.e. a document starts life with or without a Service Worker and maintains that for its lifetime. So documents will have to be reloaded to actually be controlled.\r\n![Architecture](https://mdn.mozillademos.org/files/8241/flowchart-production-version.png)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}